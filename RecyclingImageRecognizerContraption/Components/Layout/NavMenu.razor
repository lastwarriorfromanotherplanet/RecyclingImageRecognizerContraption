@inject NavigationManager NavigationManager

<div class="nav">
    <div class="left-side">
        <button @onclick="TakePhoto" class="nav-button">
        <i class="fas fa-camera"></i>
        <span>Camera</span>
		</button>
	</div>
    <div class="right-side">
        <button @onclick="NavigateToCategorySearch" class="nav-button">
            <i class="fas fa-file"></i>
            <span>Search</span>
		</button>
	</div>
</div>
<style>
    .nav {
        position: fixed;
        bottom: 0;
        width: 100vw;
        height: 50vh; /* bottom half of the screen */
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        background-color: #f8f9fa;
    }

    .nav-button {
        width: 40vw;
        height: 40vh;
        font-size: 1.5rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border: none;
        border-radius: 20px;
        background-color: #007BFF;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .nav-button:hover {
            background-color: #0056b3;
        }

        .nav-button i {
            font-size: 2rem;
            margin-bottom: 8px;
        }

    .left-side,
    .right-side {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>


@code {
    private void NavigateToCategorySearch()
    {
        NavigationManager.NavigateTo("/CategorySearch");
    }


    [Parameter] public EventCallback OnTakePhoto { get; set; }
    [Parameter] public EventCallback OnShowFilePicker { get; set; }
    [Parameter] public List<string?>? Categories { get; set; }
    [Parameter] public EventCallback<string?> OnCategorySelected { get; set; }

    private async Task TakePhoto() => await OnTakePhoto.InvokeAsync();
    private async Task ShowFilePicker() => await OnShowFilePicker.InvokeAsync();
}

