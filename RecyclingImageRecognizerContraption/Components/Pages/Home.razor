@page "/"


@inject IJSRuntime JS
@inject LaPorteService LaPorteService

@using Microsoft.EntityFrameworkCore;
@using RecyclingImageRecognizerContraption.Resources.Models;
@using RecyclingImageRecognizerContraption.Resources.DatabaseService;

<p>@status</p>

@code {
    private string? imagePath;

    private string? status;

    private List<LaPorte> items = new();

    protected override async Task OnInitializedAsync()
    {
        // Ensures the database is initialized (CreateTableAsync runs in your service)
        items = await LaPorteService.GetItemsAsync();

        if (items.Count == 0)
        {
            var dbSeeder = new AddDatabase(LaPorteService);
            await dbSeeder.FillDatabase();
            items = await LaPorteService.GetItemsAsync(); // Refresh list after adding
            status = "Database initialized with sample data!";
        }
        else
        {
            status = $"Loaded {items.Count} item(s) from the database.";
        }
    }


    private async Task TakePhoto()
    {
        var photo = await MediaPicker.CapturePhotoAsync();
        if (photo != null)
        {
            var stream = await photo.OpenReadAsync();
            var filePath = Path.Combine(FileSystem.CacheDirectory, photo.FileName);

            using (var fileStream = File.OpenWrite(filePath))
            {
                await stream.CopyToAsync(fileStream);
            }

            imagePath = filePath;
        }
    }
}

<h1>Recycling Recognition App</h1>


@if (items?.Any() == true)
{
    <ul>
        @foreach (var item in items)
        {
            <li>@item.Name - @item.Category (@(item.IsRecyclable ? "♻️" : "🚫"))</li>
        }
    </ul>
}


<div style="position: fixed; bottom: 20px; left: 50%; transform: translateX(-50%);">
    <!-- <button @onclick="AddDatabase">Add Sample Item</button> -->



    <button @onclick="TakePhoto" style="padding: 10px 20px; font-size: 18px;">Take Photo</button>

</div>
